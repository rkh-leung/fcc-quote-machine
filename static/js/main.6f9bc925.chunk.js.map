{"version":3,"sources":["components/Random-quote.jsx","App.js","reportWebVitals.js","index.js"],"names":["RandomQuote","props","state","content","author","getQuote","a","fetch","response","json","this","setState","id","className","target","href","onClick","bind","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAEaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,GACTC,OAAQ,IAGV,EAAKC,WARY,EADrB,mFAYE,kCAAAC,EAAA,sEACyBC,MAAM,kCAD/B,cACQC,EADR,gBAEoCA,EAASC,OAF7C,gBAEUN,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,OACjBM,KAAKC,SAAS,CACZR,UACAC,WALJ,gDAZF,0EAqBE,WACE,OACE,0BAASQ,GAAG,YAAZ,UACE,mBAAGA,GAAG,OAAN,SAAcF,KAAKR,MAAMC,UACzB,mBAAGS,GAAG,SAAN,SAAgBF,KAAKR,MAAME,SAC3B,sBAAKS,UAAU,MAAf,UACE,mBACED,GAAI,cACJE,OAAQ,OACRC,KAAI,gDAA2CL,KAAKR,MAAMC,SAH5D,SAKE,mBAAGU,UAAU,qBAEf,wBAAQD,GAAG,YAAYI,QAASN,KAAKL,SAASY,KAAKP,MAAnD,iCAlCV,GAAiCQ,aCYlBC,MAXf,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,wDAEF,cAAC,EAAD,QCGSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f9bc925.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class RandomQuote extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      content: '',\n      author: '',\n    }\n\n    this.getQuote()\n  }\n\n  async getQuote() {\n    const response = await fetch('https://api.quotable.io/random')\n    const { content, author } = await response.json()\n    this.setState({\n      content,\n      author,\n    })\n  }\n\n  render() {\n    return (\n      <section id='quote-box'>\n        <p id='text'>{this.state.content}</p>\n        <p id='author'>{this.state.author}</p>\n        <div className='div'>\n          <a\n            id={'tweet-quote'}\n            target={'_top'}\n            href={`https://twitter.com/intent/tweet?text=${this.state.content}`}\n          >\n            <i className='fab fa-twitter' />\n          </a>\n          <button id='new-quote' onClick={this.getQuote.bind(this)}>New quote</button>\n        </div>\n      </section>\n    )\n  }\n}\n","import './App.css'\nimport { RandomQuote } from './components/Random-quote'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h1>Random Quote Machine</h1>\n      </header>\n      <RandomQuote />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}